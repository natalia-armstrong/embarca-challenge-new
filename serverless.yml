service: embarca-challenge-new-dev

frameworkVersion: '3'

custom:
  dotenv:
    path: ./embarca.env

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  logs:
    restApi: false
    apiGateway: false 
  deploymentBucket:
    name: deployment-bucket-embarca-natalia-armstrong
  environment:
    S3_BUCKET: ${env:S3_BUCKET, 'not found'}
    DB_URL: ${env:DB_URL, 'not found'}
    DB_NAME: ${env:DB_NAME, 'not found'}
    DB_USER: ${env:DB_USER, 'not found'}
    DB_PASSWORD: ${env:DB_PASSWORD, 'not found'}
    DB_HOST: ${env:DB_HOST, 'not found'}
    stackName: embarca-challenge-new-dev
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource: 
        - "arn:aws:s3:::deployment-bucket-embarca-natalia-armstrong/*"

plugins:
  - serverless-dotenv-plugin
  - serverless-step-functions
  - serverless-python-requirements

functions:
  lambda1:
    handler: lambda_function.handler_lambda1.main 
    timeout: 30
    events:
      - http:
          path: lambda1
          method: post

  lambda2:
    handler: lambda_function.handler_lambda2.main 
    runtime: python3.9
    timeout: 30
    events:
      - http:
          path: lambda2
          method: post

stepFunctions:
  stateMachines:
    myStateMachine:
      definition:
        StartAt: Lambda1
        States:
          Lambda1:
            Type: Task
            Resource:
              Fn::GetAtt: [lambda1, Arn]
            Next: Lambda2
          Lambda2:
            Type: Task
            Resource:
              Fn::GetAtt: [lambda2, Arn]
            End: true

resources:
  Resources:
    CsvBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: "embarca-challenge-${opt:stage, 'dev'}-bucket-natalia-armstrong-${opt:region, 'us-east-1'}"

